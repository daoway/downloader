plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'pmd'
    id 'jacoco'
    id "com.github.spotbugs" version "5.0.14"
    id "org.sonarqube" version "4.0.0.2929"
    id 'checkstyle'
    id "io.snyk.gradle.plugin.snykplugin" version "0.4"
}

group = 'com.blogspot.ostas.downloader'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.18.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'

    testImplementation 'org.springframework.boot:spring-boot-starter-web'
}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}

pmd {
    consoleOutput = true
    toolVersion = "6.48.0"
    rulesMinimumPriority = 5
    ruleSetFiles = files("config/pmd/pmd.xml")
    ruleSets = []
}

// Example to configure HTML report
spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
    excludeFilter.set(file("config/spotbugs/excludeFilter.xml"))
}

checkstyle {
    toolVersion = '10.9.3'
}
checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java'
}

snyk {
    arguments = '--all-sub-projects'
    severity = 'low'
    api = System.getenv('SNYK_TOKEN') //https://app.snyk.io/registry/account?fromGitHubAuth=true
    autoDownload = true
    autoUpdate = true
}
